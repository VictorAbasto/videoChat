{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\gitSubidaCodigo\\\\videoChat\\\\client\\\\src\\\\SocketContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:5000');\n\nconst ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    socket.on('me', id => setMe(id));\n    socket.on('callUser', _ref2 => {\n      let {\n        from,\n        name: callerName,\n        signal\n      } = _ref2;\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answerCall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callAccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ContextProvider, \"NRX/cbBzwGZ2lVYvqZZ7AvAMR1g=\");\n\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/gitSubidaCodigo/videoChat/client/src/SocketContext.js"],"names":["React","createContext","useState","useRef","useEffect","io","Peer","SocketContext","socket","ContextProvider","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","answerCall","peer","initiator","trickle","data","emit","to","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,MAAzC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,aAAa,gBAAGN,aAAa,EAAnC;AAEA,MAAMO,MAAM,GAAGH,EAAE,CAAC,uBAAD,CAAjB;;AAEA,MAAMI,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACzC,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAEW,SAAF,EAAaC,YAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAEa,MAAF,EAAUC,SAAV,IAAwBd,QAAQ,EAAtC;AACA,QAAM,CAAEe,IAAF,EAAQC,OAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEiB,IAAF,EAAQC,OAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEmB,EAAF,EAAMC,KAAN,IAAgBpB,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAMqB,OAAO,GAAGpB,MAAM,EAAtB;AACA,QAAMqB,SAAS,GAAGrB,MAAM,EAAxB;AACA,QAAMsB,aAAa,GAAGtB,MAAM,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfsB,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAApC,EAAkEC,IAAlE,CAAwEC,aAAD,IAAmB;AACzFhB,MAAAA,SAAS,CAACgB,aAAD,CAAT;AAEAT,MAAAA,OAAO,CAACU,OAAR,CAAgBC,SAAhB,GAA4BF,aAA5B;AACA,KAJD;AAMAxB,IAAAA,MAAM,CAAC2B,EAAP,CAAU,IAAV,EAAiBC,EAAD,IAAQd,KAAK,CAACc,EAAD,CAA7B;AAEA5B,IAAAA,MAAM,CAAC2B,EAAP,CAAU,UAAV,EAAsB,SAAwC;AAAA,UAAvC;AAAEE,QAAAA,IAAF;AAAQpB,QAAAA,IAAI,EAAEqB,UAAd;AAA0BC,QAAAA;AAA1B,OAAuC;AAC7DnB,MAAAA,OAAO,CAAC;AAAEoB,QAAAA,eAAe,EAAE,IAAnB;AAAyBH,QAAAA,IAAzB;AAA+BpB,QAAAA,IAAI,EAAEqB,UAArC;AAAiDC,QAAAA;AAAjD,OAAD,CAAP;AACA,KAFD;AAGA,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAME,UAAU,GAAG,MAAM;AACxB7B,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEA,UAAM8B,IAAI,GAAG,IAAIpC,IAAJ,CAAS;AAAEqC,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,OAAO,EAAE,KAA7B;AAAoC7B,MAAAA;AAApC,KAAT,CAAb;AAEA2B,IAAAA,IAAI,CAACP,EAAL,CAAQ,QAAR,EAAmBU,IAAD,IAAU;AAC3BrC,MAAAA,MAAM,CAACsC,IAAP,CAAY,YAAZ,EAA0B;AAAEP,QAAAA,MAAM,EAAEM,IAAV;AAAgBE,QAAAA,EAAE,EAAE5B,IAAI,CAACkB;AAAzB,OAA1B;AACA,KAFD;AAIAK,IAAAA,IAAI,CAACP,EAAL,CAAQ,QAAR,EAAmBH,aAAD,IAAmB;AACpCR,MAAAA,SAAS,CAACS,OAAV,CAAkBC,SAAlB,GAA8BF,aAA9B;AACA,KAFD;AAIAU,IAAAA,IAAI,CAACH,MAAL,CAAYpB,IAAI,CAACoB,MAAjB;AAEAd,IAAAA,aAAa,CAACQ,OAAd,GAAwBS,IAAxB;AACA,GAhBD;;AAkBA,QAAMM,QAAQ,GAAIZ,EAAD,IAAQ;AACxB,UAAMM,IAAI,GAAG,IAAIpC,IAAJ,CAAS;AAAEqC,MAAAA,SAAS,EAAE,IAAb;AAAmBC,MAAAA,OAAO,EAAE,KAA5B;AAAmC7B,MAAAA;AAAnC,KAAT,CAAb;AAEA2B,IAAAA,IAAI,CAACP,EAAL,CAAQ,QAAR,EAAmBU,IAAD,IAAU;AAC3BrC,MAAAA,MAAM,CAACsC,IAAP,CAAY,UAAZ,EAAwB;AAAEG,QAAAA,UAAU,EAAEb,EAAd;AAAkBc,QAAAA,UAAU,EAAEL,IAA9B;AAAoCR,QAAAA,IAAI,EAAEhB,EAA1C;AAA8CJ,QAAAA;AAA9C,OAAxB;AACA,KAFD;AAIAyB,IAAAA,IAAI,CAACP,EAAL,CAAQ,QAAR,EAAmBH,aAAD,IAAmB;AACpCR,MAAAA,SAAS,CAACS,OAAV,CAAkBC,SAAlB,GAA8BF,aAA9B;AACA,KAFD;AAIAxB,IAAAA,MAAM,CAAC2B,EAAP,CAAU,cAAV,EAA2BI,MAAD,IAAY;AACrC3B,MAAAA,eAAe,CAAC,IAAD,CAAf;AAEA8B,MAAAA,IAAI,CAACH,MAAL,CAAYA,MAAZ;AACA,KAJD;AAMAd,IAAAA,aAAa,CAACQ,OAAd,GAAwBS,IAAxB;AACA,GAlBD;;AAoBA,QAAMS,SAAS,GAAG,MAAM;AACvBrC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAW,IAAAA,aAAa,CAACQ,OAAd,CAAsBmB,OAAtB;AAEAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA,GAND;;AAQA,sBACC,QAAC,aAAD,CAAe,QAAf;AACC,IAAA,KAAK,EAAE;AACNpC,MAAAA,IADM;AAENR,MAAAA,YAFM;AAGNY,MAAAA,OAHM;AAINC,MAAAA,SAJM;AAKNT,MAAAA,MALM;AAMNE,MAAAA,IANM;AAONC,MAAAA,OAPM;AAQNL,MAAAA,SARM;AASNQ,MAAAA,EATM;AAUN2B,MAAAA,QAVM;AAWNG,MAAAA,SAXM;AAYNV,MAAAA;AAZM,KADR;AAAA,cAgBE/B;AAhBF;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA,CA5FD;;GAAMD,e;;KAAAA,e;AA8FN,SAASA,eAAT,EAA0BF,aAA1B","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n\tconst [ callAccepted, setCallAccepted ] = useState(false);\r\n\tconst [ callEnded, setCallEnded ] = useState(false);\r\n\tconst [ stream, setStream ] = useState();\r\n\tconst [ name, setName ] = useState('');\r\n\tconst [ call, setCall ] = useState({});\r\n\tconst [ me, setMe ] = useState('');\r\n\r\n\tconst myVideo = useRef();\r\n\tconst userVideo = useRef();\r\n\tconst connectionRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((currentStream) => {\r\n\t\t\tsetStream(currentStream);\r\n\r\n\t\t\tmyVideo.current.srcObject = currentStream;\r\n\t\t});\r\n\r\n\t\tsocket.on('me', (id) => setMe(id));\r\n\r\n\t\tsocket.on('callUser', ({ from, name: callerName, signal }) => {\r\n\t\t\tsetCall({ isReceivingCall: true, from, name: callerName, signal });\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst answerCall = () => {\r\n\t\tsetCallAccepted(true);\r\n\r\n\t\tconst peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n\t\tpeer.on('signal', (data) => {\r\n\t\t\tsocket.emit('answerCall', { signal: data, to: call.from });\r\n\t\t});\r\n\r\n\t\tpeer.on('stream', (currentStream) => {\r\n\t\t\tuserVideo.current.srcObject = currentStream;\r\n\t\t});\r\n\r\n\t\tpeer.signal(call.signal);\r\n\r\n\t\tconnectionRef.current = peer;\r\n\t};\r\n\r\n\tconst callUser = (id) => {\r\n\t\tconst peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n\t\tpeer.on('signal', (data) => {\r\n\t\t\tsocket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n\t\t});\r\n\r\n\t\tpeer.on('stream', (currentStream) => {\r\n\t\t\tuserVideo.current.srcObject = currentStream;\r\n\t\t});\r\n\r\n\t\tsocket.on('callAccepted', (signal) => {\r\n\t\t\tsetCallAccepted(true);\r\n\r\n\t\t\tpeer.signal(signal);\r\n\t\t});\r\n\r\n\t\tconnectionRef.current = peer;\r\n\t};\r\n\r\n\tconst leaveCall = () => {\r\n\t\tsetCallEnded(true);\r\n\r\n\t\tconnectionRef.current.destroy();\r\n\r\n\t\twindow.location.reload();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SocketContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcall,\r\n\t\t\t\tcallAccepted,\r\n\t\t\t\tmyVideo,\r\n\t\t\t\tuserVideo,\r\n\t\t\t\tstream,\r\n\t\t\t\tname,\r\n\t\t\t\tsetName,\r\n\t\t\t\tcallEnded,\r\n\t\t\t\tme,\r\n\t\t\t\tcallUser,\r\n\t\t\t\tleaveCall,\r\n\t\t\t\tanswerCall\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</SocketContext.Provider>\r\n\t);\r\n};\r\n\r\nexport { ContextProvider, SocketContext };\r\n"]},"metadata":{},"sourceType":"module"}