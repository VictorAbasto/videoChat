{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\Testeo\\\\Working\\\\client\\\\src\\\\components\\\\Options.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport { makeStyles } from '@mui/styles';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment } from '@mui/icons-material/Assignment';\nimport { Phone } from '@mui/icons-material/LocalPhone';\nimport { PhoneDisabled } from '@mui/icons-material/PhoneDisabled';\nimport { SocketContext } from '../SocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  gridContainer: {\n    width: '100%'\n  },\n  container: {\n    width: '600px',\n    margin: '35px 0',\n    padding: 0\n  },\n  margin: {\n    marginTop: 20\n  },\n  padding: {\n    padding: 20\n  },\n  paper: {\n    padding: '10px 20px',\n    border: '2px solid black'\n  }\n}));\n/*\r\nconst Options = ({ children }) => {\r\n\tconst { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\r\n\tconst [ idToCall, setIdToCall ] = useState('');\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tOptions\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};*/\n\nconst Options = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    me,\n    callAccepted,\n    name,\n    setName,\n    callEnded,\n    leaveCall,\n    callUser\n  } = useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState('');\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.gridContainer,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            className: classes.padding,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h6\",\n              children: \"Account Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n              text: me,\n              className: classes.margin,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                startIcon: /*#__PURE__*/_jsxDEV(Assignment, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this),\n                children: \"Copy Your ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            className: classes.padding,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h6\",\n              children: \"Make a call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"ID to call\",\n              value: idToCall,\n              onChange: e => setIdToCall(e.target.value),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 8\n            }, this), callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              startIcon: /*#__PURE__*/_jsxDEV(PhoneDisabled, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this),\n              fullWidth: true,\n              onClick: leaveCall,\n              className: classes.margin,\n              children: \"Hang Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(Phone, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this),\n              fullWidth: true,\n              onClick: () => callUser(idToCall),\n              className: classes.margin,\n              children: \"Call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Options, \"SNIgIuT8pG0UthxMXIYwPCvRv0Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = Options;\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/Testeo/Working/client/src/components/Options.jsx"],"names":["React","useState","useContext","Typography","Paper","Grid","Button","TextField","Container","makeStyles","CopyToClipboard","Assignment","Phone","PhoneDisabled","SocketContext","useStyles","root","display","flexDirection","gridContainer","width","container","margin","padding","marginTop","paper","border","Options","children","me","callAccepted","name","setName","callEnded","leaveCall","callUser","idToCall","setIdToCall","classes","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Container from '@mui/material/Container';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment } from '@mui/icons-material/Assignment';\r\nimport { Phone } from '@mui/icons-material/LocalPhone';\r\nimport { PhoneDisabled } from '@mui/icons-material/PhoneDisabled';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column'\r\n\t},\r\n\tgridContainer: {\r\n\t\twidth: '100%'\r\n\t},\r\n\tcontainer: {\r\n\t\twidth: '600px',\r\n\t\tmargin: '35px 0',\r\n\t\tpadding: 0\r\n\t},\r\n\tmargin: {\r\n\t\tmarginTop: 20\r\n\t},\r\n\tpadding: {\r\n\t\tpadding: 20\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: '10px 20px',\r\n\t\tborder: '2px solid black'\r\n\t}\r\n}));\r\n/*\r\nconst Options = ({ children }) => {\r\n\tconst { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\r\n\tconst [ idToCall, setIdToCall ] = useState('');\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tOptions\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};*/\r\n\r\nconst Options = ({ children }) => {\r\n\tconst { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\r\n\tconst [ idToCall, setIdToCall ] = useState('');\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Container className={classes.container}>\r\n\t\t\t<Paper elevation={10} className={classes.paper}>\r\n\t\t\t\t<form className={classes.root} noValidate autoComplete=\"off\">\r\n\t\t\t\t\t<Grid container className={classes.gridContainer}>\r\n\t\t\t\t\t\t<Grid item xs={12} md={6} className={classes.padding}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom variant=\"h6\">\r\n\t\t\t\t\t\t\t\tAccount Info\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\r\n\t\t\t\t\t\t\t<CopyToClipboard text={me} className={classes.margin}>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tstartIcon={<Assignment fontSize=\"large\" />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCopy Your ID\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} md={6} className={classes.padding}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom variant=\"h6\">\r\n\t\t\t\t\t\t\t\tMake a call\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel=\"ID to call\"\r\n\t\t\t\t\t\t\t\tvalue={idToCall}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setIdToCall(e.target.value)}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{callAccepted && !callEnded ? (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\tstartIcon={<PhoneDisabled fontSize=\"large\" />}\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tonClick={leaveCall}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.margin}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tHang Up\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tstartIcon={<Phone fontSize=\"large\" />}\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tonClick={() => callUser(idToCall)}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.margin}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCall\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</form>\r\n\t\t\t\t{children}\r\n\t\t\t</Paper>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Options;\r\n"]},"metadata":{},"sourceType":"module"}